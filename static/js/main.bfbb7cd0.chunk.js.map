{"version":3,"sources":["components/ImgGalleryItem/ImgGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/Notification/Notification.module.css","components/ImgGallery/ImgGallery.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.jsx","components/ImgGalleryItem/ImgGalleryItem.jsx","components/ImgGallery/ImgGallery.jsx","API/fetchAPI.js","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/Notification/Notification.jsx","App.jsx","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","value","handleChange","e","setState","target","handleSubmit","preventDefault","props","onSubmitForm","this","className","css","searchbar","searchForm","onSubmit","type","onInput","autocomplete","autofocus","placeholder","Component","ImgGalleryItem","webformatURL","onSelectImg","largeImageURL","imgGalleryItem","onClick","src","alt","ImgGallery","images","onSelectedImg","imgGallery","map","img","id","searchImg","input","page","fetch","Button","wrap","button","Spinner","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","code","onCloseModal","handleClickModal","currentTarget","window","addEventListener","disableBodyScroll","removeEventListener","enableBodyScroll","createPortal","overlay","modal","largeImg","Notification","error","title","App","status","resetPageNumber","updatePageNumber","prevState","scrollTo","top","documentElement","scrollHeight","behavior","onSearchValueInput","onFoundLargeImg","onResetLargeImg","prevProps","inputPrev","pagePrev","imagesPrev","then","res","json","total","hits","catch","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bfbb7cd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgGalleryItem\":\"ImgGalleryItem_imgGalleryItem__20vZo\",\"imgGalleryItem-image\":\"ImgGalleryItem_imgGalleryItem-image__10MI_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Button_wrap__2o1JK\",\"button\":\"Button_button__quHDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2eF7Z\",\"modal\":\"Modal_modal__1xLZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Notification_wrap__3RIN-\",\"title\":\"Notification_title__1t_rm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgGallery\":\"ImgGallery_imgGallery__1GEpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Loader_wrap__asSvX\"};","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Searchbar.module.css\";\n\nexport class Searchbar extends Component {\n  state = {\n    value: \"\",\n  };\n\n  handleChange = (e) => {\n    return this.setState({ value: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    if (this.state.value === \"\") {\n      return;\n    }\n    e.preventDefault();\n    this.props.onSubmitForm(this.state.value);\n    this.setState({ value: \"\" });\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <header className={css.searchbar}>\n        <form className={css.searchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={css[\"searchForm-button\"]}>\n            <span className={css[\"searchForm-button-label\"]}>Search</span>\n          </button>\n\n          <input\n            value={value}\n            onInput={this.handleChange}\n            className={css[\"searchForm-input\"]}\n            type=\"text\"\n            autocomplete=\"off\"\n            autofocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./ImgGalleryItem.module.css\";\n\nexport class ImgGalleryItem extends Component {\n  render() {\n    const { webformatURL, onSelectImg, largeImageURL } = this.props;\n\n    return (\n      <li\n        className={css.imgGalleryItem}\n        onClick={() => onSelectImg(largeImageURL)}\n      >\n        <img\n          src={webformatURL}\n          alt=\"\"\n          className={css[\"imgGalleryItem-image\"]}\n        />\n      </li>\n    );\n  }\n}\n\nImgGalleryItem.propTypes = {\n  largeImageURL: PropTypes.string,\n  webformatURL: PropTypes.string,\n  onSelectImg: PropTypes.func,\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ImgGalleryItem } from \"../ImgGalleryItem/ImgGalleryItem\";\nimport css from \"./ImgGallery.module.css\";\n\nexport class ImgGallery extends Component {\n  render() {\n    const { images, onSelectedImg } = this.props;\n\n    return (\n      <ul className={css.imgGallery}>\n        {images.map((img) => {\n          return (\n            <ImgGalleryItem\n              key={img.id}\n              largeImageURL={img.largeImageURL}\n              webformatURL={img.webformatURL}\n              onSelectImg={onSelectedImg}\n            />\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nImgGallery.propTypes = {\n  images: PropTypes.array,\n  onSelectedImg: PropTypes.func.isRequired,\n};\n","const key = \"22578440-e1e5ecfa8eecbfc5a41a583d6\";\n\nexport const searchImg = (input, page) => {\n  const response = fetch(\n    `https://pixabay.com/api/?q=${input}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\n  );\n  return response;\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Button.module.css\";\n\nexport class Button extends Component {\n  render() {\n    const { onClick } = this.props;\n\n    return (\n      <div className={css.wrap}>\n        <button type=\"button\" className={css.button} onClick={onClick}>\n          Load more\n        </button>\n      </div>\n    );\n  }\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport css from \"./Loader.module.css\";\n\nexport class Spinner extends Component {\n  render() {\n    return (\n      <div className={css.wrap}>\n        <Loader\n          type=\"Circles\"\n          color=\"#00BFFF\"\n          height={80}\n          width={80}\n          timeout={3000} //3 secs\n        />\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Modal.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nexport class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n    disableBodyScroll(modalRoot);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n    enableBodyScroll(modalRoot);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onCloseModal();\n    }\n  };\n\n  handleClickModal = (e) => {\n    if (e.target === e.currentTarget) {\n      this.props.onCloseModal();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={css.overlay} onClick={this.handleClickModal}>\n        <div className={css.modal}>\n          <img src={this.props.largeImg} alt=\"img\" />\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nModal.propTypes = {\n  largeImg: PropTypes.string,\n  onCloseModal: PropTypes.func,\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Notification.module.css\";\n\nexport class Notification extends Component {\n  render() {\n    const { error } = this.props;\n\n    return (\n      <div className={css.wrap}>\n        <h1 className={css.title}>\n          {error ? error : \"Please, enter the correct name for your search\"}\n        </h1>\n      </div>\n    );\n  }\n}\n\nNotification.propTypes = {\n  error: PropTypes.string,\n};\n","import { Component } from \"react\";\nimport { Searchbar } from \"./components/Searchbar/Searchbar\";\nimport { ImgGallery } from \"./components/ImgGallery/ImgGallery\";\nimport { searchImg } from \"./API/fetchAPI\";\nimport { Button } from \"./components/Button/Button\";\nimport { Spinner } from \"./components/Loader/Loader\";\nimport { Modal } from \"./components/Modal/Modal\";\nimport { Notification } from \"./components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    page: 1,\n    images: [],\n    input: \"\",\n    largeImg: null,\n    status: \"idle\",\n    error: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { input, page } = this.state;\n    const inputPrev = prevState.input;\n    const pagePrev = prevState.page;\n    const imagesPrev = prevState.images;\n\n    const conditionFirstRequest = inputPrev !== input && page === 1;\n\n    if (conditionFirstRequest) {\n      searchImg(input, page)\n        .then((res) => res.json())\n        .then((res) => {\n          if (res.total === 0) {\n            return this.setState({ status: \"rejected\" });\n          }\n          this.setState({ images: res.hits, status: \"resolved\" });\n        })\n        .catch((error) => this.setState({ error, status: \"rejected\" }));\n    }\n\n    const conditionSecondRequest = pagePrev !== page && page !== 1;\n\n    if (conditionSecondRequest) {\n      searchImg(input, page)\n        .then((res) => res.json())\n        .then((res) =>\n          this.setState(() => ({\n            images: [...imagesPrev, ...res.hits],\n            status: \"resolved\",\n          }))\n        )\n        .catch((error) => this.setState({ error, status: \"rejected\" }));\n    }\n  }\n\n  resetPageNumber = () => {\n    this.setState({ page: 1 });\n  };\n\n  updatePageNumber = () => {\n    this.setState((prevState) => ({ page: prevState.page + 1 }));\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  onSearchValueInput = (value) => {\n    this.setState({ input: value, status: \"pending\" });\n    this.resetPageNumber();\n  };\n\n  onFoundLargeImg = (value) => {\n    this.setState({ largeImg: value, status: \"openModal\" });\n  };\n\n  onResetLargeImg = () => {\n    this.setState({ largeImg: null, status: \"resolved\" });\n  };\n\n  render() {\n    const { status, images, largeImg, error } = this.state;\n\n    if (status === \"idle\") {\n      return <Searchbar onSubmitForm={this.onSearchValueInput} />;\n    }\n\n    if (status === \"pending\") {\n      return (\n        <div>\n          <Searchbar onSubmitForm={this.onSearchValueInput} />\n          <Spinner />\n        </div>\n      );\n    }\n\n    if (status === \"resolved\") {\n      return (\n        <div>\n          <Searchbar onSubmitForm={this.onSearchValueInput} />\n          <ImgGallery images={images} onSelectedImg={this.onFoundLargeImg} />\n          <Button onClick={this.updatePageNumber} />\n        </div>\n      );\n    }\n\n    if (status === \"openModal\") {\n      return (\n        <div>\n          <Searchbar onSubmitForm={this.onSearchValueInput} />\n          <ImgGallery images={images} onSelectedImg={this.onFoundLargeImg} />\n          <Modal largeImg={largeImg} onCloseModal={this.onResetLargeImg} />\n        </div>\n      );\n    }\n\n    if (status === \"rejected\") {\n      return (\n        <div>\n          <Searchbar onSubmitForm={this.onSearchValueInput} />\n          <Notification error={error} />\n        </div>\n      );\n    }\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__MmFCP\",\"searchForm\":\"Searchbar_searchForm__2SwpY\",\"searchForm-button\":\"Searchbar_searchForm-button__3o6SE\",\"searchForm-button-label\":\"Searchbar_searchForm-button-label__3XlM5\",\"searchForm-input\":\"Searchbar_searchForm-input__1xeFc\"};"],"sourceRoot":""}