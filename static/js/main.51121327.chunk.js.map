{"version":3,"sources":["components/ImgGalleryItem/ImgGalleryItem.module.css","components/Modal/Modal.module.css","components/Notification/Notification.module.css","components/ImgGallery/ImgGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.jsx","components/ImgGalleryItem/ImgGalleryItem.jsx","components/ImgGallery/ImgGallery.jsx","components/API/fetchAPI.js","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/Notification/Notification.jsx","App.jsx","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","value","handleChange","e","setState","target","handleSubmit","preventDefault","props","onSubmitForm","this","className","css","searchbar","searchForm","onSubmit","type","onInput","autoComplete","autoFocus","placeholder","Component","ImgGalleryItem","img","onSelectImg","largeImage","onClick","src","alt","ImgGallery","images","onSelectedImg","map","webformatURL","largeImageURL","id","searchImg","input","page","fetch","Button","Spinner","wrap","color","height","width","timeout","modalRoot","document","querySelector","Modal","closeByEscape","code","onCloseModal","clickByModal","currentTarget","window","addEventListener","disableBodyScroll","removeEventListener","enableBodyScroll","createPortal","Overlay","largeImg","Notification","error","title","App","status","resetPageNumber","updatePageNumber","prevState","scrollTo","top","documentElement","scrollHeight","behavior","onSearchValueInput","onFoundLargeImg","onResetLargeImg","prevProps","inputPrev","pagePrev","imagesPrev","then","res","json","total","hits","catch","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51121327.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImgGalleryItem\":\"ImgGalleryItem_ImgGalleryItem__2fqzi\",\"ImgGalleryItemImage\":\"ImgGalleryItem_ImgGalleryItemImage__3dW6E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3PKZB\",\"Modal\":\"Modal_Modal__1SYT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Notification_wrap__3RIN-\",\"title\":\"Notification_title__1t_rm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImgGallery\":\"ImgGallery_ImgGallery__12Hbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2saNy\",\"button\":\"Button_button__quHDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Loader_wrap__asSvX\"};","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Searchbar.module.css\";\n\nexport class Searchbar extends Component {\n  state = {\n    value: \"\",\n  };\n\n  handleChange = (e) => {\n    return this.setState({ value: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    if (this.state.value === \"\") {\n      return;\n    }\n    e.preventDefault();\n    this.props.onSubmitForm(this.state.value);\n    this.setState({ value: \"\" });\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <header className={css.searchbar}>\n        <form className={css.searchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={css[\"searchForm-button\"]}>\n            <span className={css[\"searchForm-button-label\"]}>Search</span>\n          </button>\n\n          <input\n            value={value}\n            onInput={this.handleChange}\n            className={css[\"searchForm-input\"]}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./ImgGalleryItem.module.css\";\n\nexport class ImgGalleryItem extends Component {\n  render() {\n    const { img, onSelectImg, largeImage } = this.props;\n\n    return (\n      <li\n        className={css.ImgGalleryItem}\n        onClick={() => onSelectImg(largeImage)}\n      >\n        <img src={img} alt=\"\" className={css[\"ImgGalleryItemImage\"]} />\n      </li>\n    );\n  }\n}\n\nImgGalleryItem.propTypes = {\n  largeImage: PropTypes.string,\n  img: PropTypes.string,\n  onSelectImg: PropTypes.func,\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ImgGalleryItem } from \"../ImgGalleryItem/ImgGalleryItem\";\nimport css from \"./ImgGallery.module.css\";\n\nexport class ImgGallery extends Component {\n  render() {\n    const { images, onSelectedImg } = this.props;\n\n    return (\n      <ul className={css.ImgGallery}>\n        {images.map((img) => (\n          <ImgGalleryItem\n            key={img.id}\n            img={img.webformatURL}\n            largeImage={img.largeImageURL}\n            onSelectImg={onSelectedImg}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nImgGallery.propTypes = {\n  images: PropTypes.array,\n  onSelectedImg: PropTypes.func.isRequired,\n};\n","const key = \"22578440-e1e5ecfa8eecbfc5a41a583d6\";\n\nexport const searchImg = (input, page) => {\n  const response = fetch(\n    `https://pixabay.com/api/?q=${input}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\n  );\n  return response;\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Button.module.css\";\n\nexport class Button extends Component {\n  render() {\n    const { onClick } = this.props;\n\n    return (\n      <button type=\"button\" className={css.Button} onClick={onClick}>\n        Load more\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport css from \"./Loader.module.css\";\n\nexport class Spinner extends Component {\n  render() {\n    return (\n      <div className={css.wrap}>\n        <Loader\n          type=\"Circles\"\n          color=\"#00BFFF\"\n          height={80}\n          width={80}\n          timeout={3000}\n        />\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Modal.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nexport class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.closeByEscape);\n    disableBodyScroll(modalRoot);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.closeByEscape);\n    enableBodyScroll(modalRoot);\n  }\n\n  closeByEscape = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onCloseModal();\n    }\n  };\n\n  clickByModal = (e) => {\n    if (e.target === e.currentTarget) {\n      this.props.onCloseModal();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={css.Overlay} onClick={this.props.onCloseModal}>\n        <div className={css.Modal}>\n          <img src={this.props.largeImg} alt={this.props.id} />\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nModal.propTypes = {\n  largeImg: PropTypes.string.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n  id: PropTypes.string,\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Notification.module.css\";\n\nexport class Notification extends Component {\n  render() {\n    const { error } = this.props;\n\n    return (\n      <div className={css.wrap}>\n        <h1 className={css.title}>\n          {error ? error : \"Please, enter the correct name for your search\"}\n        </h1>\n      </div>\n    );\n  }\n}\n\nNotification.propTypes = {\n  error: PropTypes.string,\n};\n","import { Component } from \"react\";\nimport { Searchbar } from \"./components/Searchbar/Searchbar\";\nimport { ImgGallery } from \"./components/ImgGallery/ImgGallery\";\nimport { searchImg } from \"./components/API/fetchAPI\";\nimport { Button } from \"./components/Button/Button\";\nimport { Spinner } from \"./components/Loader/Loader\";\nimport { Modal } from \"./components/Modal/Modal\";\nimport { Notification } from \"./components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    page: 1,\n    images: [],\n    input: \"\",\n    largeImg: null,\n    status: \"idle\",\n    error: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { input, page } = this.state;\n    const inputPrev = prevState.input;\n    const pagePrev = prevState.page;\n    const imagesPrev = prevState.images;\n\n    if (inputPrev !== input && page === 1) {\n      searchImg(input, page)\n        .then((res) => res.json())\n        .then((res) => {\n          if (res.total === 0) {\n            return this.setState({ status: \"rejected\" });\n          }\n          this.setState({ images: res.hits, status: \"resolved\" });\n        })\n        .catch((error) => this.setState({ error, status: \"rejected\" }));\n    }\n\n    if (pagePrev !== page && page !== 1) {\n      searchImg(input, page)\n        .then((res) => res.json())\n        .then((res) =>\n          this.setState(() => ({\n            images: [...imagesPrev, ...res.hits],\n            status: \"resolved\",\n          }))\n        )\n        .catch((error) => this.setState({ error, status: \"rejected\" }));\n    }\n  }\n\n  resetPageNumber = () => {\n    this.setState({ page: 1 });\n  };\n\n  updatePageNumber = () => {\n    this.setState((prevState) => ({ page: prevState.page + 1 }));\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  onSearchValueInput = (value) => {\n    this.setState({ input: value, status: \"pending\" });\n    this.resetPageNumber();\n  };\n\n  onFoundLargeImg = (value) => {\n    this.setState({ largeImg: value, status: \"openModal\" });\n  };\n\n  onResetLargeImg = () => {\n    this.setState({ largeImg: null, status: \"resolved\" });\n  };\n\n  render() {\n    const { status, images, largeImg, error } = this.state;\n\n    if (status === \"idle\") {\n      return <Searchbar onSubmitForm={this.onSearchValueInput} />;\n    }\n\n    if (status === \"pending\") {\n      return (\n        <div>\n          <Searchbar onSubmitForm={this.onSearchValueInput} />\n          <Spinner />\n        </div>\n      );\n    }\n\n    if (status === \"resolved\") {\n      return (\n        <div>\n          <Searchbar onSubmitForm={this.onSearchValueInput} />\n          <ImgGallery images={images} onSelectedImg={this.onFoundLargeImg} />\n          <Button onClick={this.updatePageNumber} />\n        </div>\n      );\n    }\n\n    if (status === \"openModal\") {\n      return (\n        <div>\n          <Searchbar onSubmitForm={this.onSearchValueInput} />\n          <ImgGallery images={images} onSelectedImg={this.onFoundLargeImg} />\n          <Modal largeImg={largeImg} onCloseModal={this.onResetLargeImg} />\n        </div>\n      );\n    }\n\n    if (status === \"rejected\") {\n      return (\n        <div>\n          <Searchbar onSubmitForm={this.onSearchValueInput} />\n          <Notification error={error} />\n        </div>\n      );\n    }\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__MmFCP\",\"searchForm\":\"Searchbar_searchForm__2SwpY\",\"searchForm-button\":\"Searchbar_searchForm-button__3o6SE\",\"searchForm-button-label\":\"Searchbar_searchForm-button-label__3XlM5\",\"searchForm-input\":\"Searchbar_searchForm-input__1xeFc\"};"],"sourceRoot":""}